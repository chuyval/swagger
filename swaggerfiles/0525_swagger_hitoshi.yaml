---
  swagger: "2.0"
  info: 
    version: "0.0.0"
    title: "Hiota Helper Agent"
    description: "Hiota Helper Agent provides APIs for life cycle management of edge devices (servers and gateways) and softwares."
    termsOfService: "http://termsOfService/TBA"
    contact: 
      name: "Pandra Team"
    license: 
      name: "Hitachi Vantara copy right"
  host: "hostNameToBeDetailed"
  basePath: "/api/v1"
  schemes: 
    - "https"
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  paths: 
    /tasks: 
      get: 
        description: "Returns provision state of device: Provisioned, Provisioning, not provisioned"
        operationId: "findTasks"
        produces: 
          - "application/json"
          - "application/xml"
          - "text/xml"
          - "text/html"
        parameters: 
          #- 
          #  name: "tags"
          #  in: "query"
          #  description: "tags to filter by"
          #  required: false
          #  type: "array"
          #  items: 
          #    type: "string"
          #  collectionFormat: "csv"
          - 
            name: "limit"
            in: "query"
            description: "maximum number of results to return"
            required: false
            type: "integer"
            format: "int32"
          - 
            name: "pageindex"
            in: "query"
            description: "index of paging"
            required: false
            type: "integer"
            format: "int32"
        responses: 
          "200":
            description: "task response"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Task"
          default: 
            description: "unexpected error"
            schema: 
              $ref: "#/definitions/ErrorModel"
      post: 
        description: "Pushes a task to an Agent"
        operationId: "addTask"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "task"
            in: "body"
            description: "Task to be created"
            required: true
            schema: 
              $ref: "#/definitions/NewTask"
        responses: 
          "200":
            description: "create task response"
            schema: 
              $ref: "#/definitions/Task"
          default: 
            description: "unexpected error"
            schema: 
              $ref: "#/definitions/ErrorModel"
    /tasks/{id}: 
      get: 
        description: "Returns a task based on a single ID."
        operationId: "findTaskById"
        produces: 
          - "application/json"
          - "application/xml"
          - "text/xml"
          - "text/html"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "ID of task to fetch"
            required: true
            type: "string"
            format: "string"
        responses: 
          "200":
            description: "task response"
            schema: 
              $ref: "#/definitions/Task"
          default: 
            description: "unexpected error"
            schema: 
              $ref: "#/definitions/ErrorModel"
      put: 
        description: "Update a task to an Agent"
        operationId: "editTask"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "ID of task to fetch"
            required: true
            type: "string"
            format: "string"
          - 
            name: "task"
            in: "body"
            description: "Task to be created"
            required: true
            schema: 
              $ref: "#/definitions/NewTask"
        responses: 
          "200":
            description: "create task response"
            schema: 
              $ref: "#/definitions/Task"
          default: 
            description: "unexpected error"
            schema: 
              $ref: "#/definitions/ErrorModel"
      delete: 
        description: "deletes a single task based on the ID supplied"
        operationId: "deleteTask"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "ID of task to delete"
            required: true
            type: "string"
            format: "string"
        responses: 
          "204":
            description: "Task deleted"
          default: 
            description: "unexpected error"
            schema: 
              $ref: "#/definitions/ErrorModel"
  definitions: 
    NewTask: 
      type: "object"
      required: 
        - "type"
        - "command"
      properties: 
        type: 
          type: "string"
        command:
          type: "string"
        created:
          type: "string"
        modified:
          type: "string"
        userID:
          type: "string"
    Task: 
      type: "object"
      allOf: 
        - 
          $ref: "#/definitions/NewTask"
        - 
          required: 
            - "id"
          properties: 
            id: 
              type: "integer"
              format: "int64"
    ErrorModel: 
      type: "object"
      required: 
        - "code"
        - "message"
      properties: 
        code: 
          type: "integer"
          format: "int32"
        message: 
          type: "string"
